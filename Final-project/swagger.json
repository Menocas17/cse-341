{
  "swagger": "2.0",
  "info": {
    "title": "Online Store API",
    "description": "This API allows manage the flow of an online store, since managin the users to the inventory and item carts of the users",
    "version": "1.0.0"
  },
  "host": "online-store-cse341.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/": {
      "get": {
        "description": "This route is the index route, if you call this endpoint you will get a general description of the API",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "description": "With this endpoint you are going to be able to fetch all the products in the inventory",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "description": "You can search for an specific product looking it by it's product_id",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/create": {
      "post": {
        "description": "This endpoint is for creating new products and adding them to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_brand": {
                  "example": "any"
                },
                "product_color": {
                  "example": "any"
                },
                "product_description": {
                  "example": "any"
                },
                "product_name": {
                  "example": "any"
                },
                "product_price": {
                  "example": "any number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/update/{product_id}": {
      "put": {
        "description": "With this endpoint you will be able to fully update and specific product, you can update just a property or all the product at once",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "product_brand": {
                  "example": "any"
                },
                "product_color": {
                  "example": "any"
                },
                "product_description": {
                  "example": "any"
                },
                "product_name": {
                  "example": "any"
                },
                "product_price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/delete/{product_id}": {
      "delete": {
        "description": "Endpoint for deleting a product from the database",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/carts/{user_id}": {
      "get": {
        "description": "This endpoint will look the item cart of an specific user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "This means that there is no cart for the user or the cart is empty"
          }
        }
      }
    },
    "/carts/update/{user_id}": {
      "put": {
        "description": "This endpoint will update the cart adding items, if the cart does not exist, it will create the cart, we decided to include the creation part on this endpoint as is more efficient and less redundant than creating a separted endpoint for just initialize the cart for the user ",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "example": "any"
                },
                "product_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/carts/delete/{user_id}/{product_id}": {
      "delete": {
        "description": "This endpoint will delete items from a user's cart. IMPORTANT: the cart is never deleterd it could be empty but is going to be still there for the user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/get-all": {
      "get": {
        "description": "With this endpoint you will get all the users in the data base, onyl admins can access this endpoint",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "description": "Use this endpoint for registering a user in the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_name": {
                  "example": "any"
                },
                "user_lastName": {
                  "example": "any"
                },
                "user_birthday": {
                  "example": "any"
                },
                "user_address": {
                  "example": "any"
                },
                "user_email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "user_phone_number": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/editAccount/{user_id}": {
      "put": {
        "description": "With this endpoint you will be able to update a user in the database",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_name": {
                  "example": "any"
                },
                "user_lastName": {
                  "example": "any"
                },
                "user_birthday": {
                  "example": "any"
                },
                "user_address": {
                  "example": "any"
                },
                "user_email": {
                  "example": "any"
                },
                "user_password": {
                  "example": "any"
                },
                "user_phone_number": {
                  "example": "any"
                },
                "user_type": {
                  "example": "any"
                },
                "cart_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/delete/{user_id}": {
      "delete": {
        "description": "With this endpoint you will be able to delete and specific user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "Use this endpoint for local login, you must provide the email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_email": {
                  "example": "any eamil"
                },
                "passwors": {
                  "example": "any password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/log-out": {
      "post": {
        "description": "This endpoint will log out all users that logged in, with google or local login",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/auth/google": {
      "get": {
        "description": "IMPORTANT: DO NOT EXECUTE THIS, this endpoint will redirect you to the OAuth flow of google",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/reviews/create/{product_id}": {
      "post": {
        "description": "This endpoint will create a review from a user in a specific product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "review_rating": {
                  "example": "any number from 1 to 10"
                },
                "review_text": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/reviews/{product_id}": {
      "get": {
        "description": "This endpoint will get all the reviews for an specific product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reviews/user-reviews/{user_id}": {
      "get": {
        "description": "This endpoint will get all the reviews left by a user in all the products",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reviews/update/{review_id}": {
      "put": {
        "description": "This endpoint will update an specific review for a product, the user will be able to edit the rating and the text only",
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "review_rating": {
                  "example": "any"
                },
                "review_text": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reviews/delete/{review_id}": {
      "delete": {
        "description": "With this endpoint a review for a product can be deleted",
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}
